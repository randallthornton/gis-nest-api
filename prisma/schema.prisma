// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Location {
  id        Int         @id @default(autoincrement())
  name      String
  latitude  Float
  longitude Float
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt

  movements Movement[]
}

model Asset {
  id             Int           @id @default(autoincrement())
  name           String        @unique
  createdAt      DateTime      @default(now())
  updatedAt      DateTime      @updatedAt
  movements      Movement[]
  organization   Organization @relation(fields: [organizationId], references: [id], onDelete: Cascade)
  organizationId Int
}

model Movement {
  id         Int       @id @default(autoincrement())
  location   Location @relation(fields: [locationId], references: [id], onDelete: Cascade)
  locationId Int
  asset      Asset    @relation(fields: [assetId], references: [id], onDelete: Cascade)
  assetId    Int
  timestamp  DateTime  @default(now())
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
}

model Organization {
  id                Int                 @id @default(autoincrement())
  name              String              @unique
  createdAt         DateTime            @default(now())
  updatedAt         DateTime            @updatedAt
  assets            Asset[]
  userOrganizations UserOrganization[]
}

model User {
  id                Int                 @id @default(autoincrement())
  email             String              @unique
  password          String
  createdAt         DateTime            @default(now())
  updatedAt         DateTime            @updatedAt
  userOrganizations UserOrganization[]
}

model UserOrganization {
  id             Int           @id @default(autoincrement())
  user           User         @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId         Int
  organization   Organization @relation(fields: [organizationId], references: [id], onDelete: Cascade)
  organizationId Int
  createdAt      DateTime      @default(now())
  updatedAt      DateTime      @updatedAt
}
